{"version":3,"sources":["components/Section/Section.module.css","components/Contacts/ContactsFilter.module.css","components/App.module.css","components/Form/Form.module.css","components/Section/Section.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Contacts/ContactsFilter.js","components/App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","title","children","className","styles","container","Form","onSubmit","useState","name","number","state","setState","handleChange","e","prevState","target","value","reset","form","preventDefault","label","input","type","onChange","pattern","required","button","defaultProps","Contacts","contacts","onDelete","list","map","id","item","text","onClick","ContactsFilter","App","generate","setContacts","filter","setFilter","useEffect","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","sort","a","b","localeCompare","filterContacts","find","alert","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0656229.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__yh-Sk\",\"title\":\"Section_title__2bktB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactsFilter_label__6vSF4\",\"input\":\"ContactsFilter_input__2JYjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2P7Of\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__4I45W\",\"label\":\"Form_label__3jHOr\",\"input\":\"Form_input__1D1Pl\",\"button\":\"Form_button__1NMeZ\"};","import styles from \"./Section.module.css\";\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { useState ,useEffect} from \"react\";\nimport styles from \"./Form.module.css\";\nimport PropTypes from \"prop-types\";\n const Form =({onSubmit})=> {\n\nconst [state,setState]=useState({  name: \"\",\n    number: \"\",});\n\n\n  const handleChange = (e) => {\n    setState(prevState=>{return{...prevState, [e.target.name]: e.target.value }});\n  };\n\n const  handleSubmit = (e) => {\n    e.preventDefault();\n   onSubmit(state);\n    reset();\n  };\n\n  const reset = () => {\n    setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n    return (\n      <form className={styles.form} onSubmit={\n        handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={state.name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={state.number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\nForm.defaultProps={\n  onSubmit:()=>{},\n}\nForm.propTypes={\n  onSubmit:PropTypes.func,\n}\nexport default Form;","import PropTypes from \"prop-types\";\nimport styles from \"./Contacts.module.css\";\n\nconst Contacts = ({ contacts, onDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <p className={styles.text}>{name} :</p>\n          <p className={styles.text}>{number}</p>\n          <button\n            className={styles.button}\n            onClick={() => {\n              onDelete(id);\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactsFilter.module.css\";\n\n\nconst ContactsFilter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nContactsFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactsFilter;\n","import { useEffect, useState } from \"react\";\nimport { generate } from \"shortid\";\nimport styles from \"./App.module.css\";\nimport Section from \"./Section\";\nimport Form from \"./Form\";\nimport Contacts from \"./Contacts\";\nimport ContactsFilter from \"./Contacts/ContactsFilter\";\n\nconst App =()=> {\n  const [contacts, setContacts] = useState \n    ([\n      {\n        id: generate(),\n        name: \"Rosie Simpson\",\n        number: \"459-12-56\",\n      },\n      {\n        id: generate(),\n        name: \"Hermione Kline\",\n        number: \"443-89-12\",\n      },\n      {\n        id: generate(),\n        name: \"Eden Clements\",\n        number: \"645-17-79\",\n      },\n      {\n        id: generate(),\n        name: \"Annie Copeland\",\n        number: \"227-91-26\",\n      },\n    ]);\n    const [filter, setFilter] = useState(\"\");\n    \n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: generate(),\n      name,\n      number,\n    };\n    contacts.find((contact) => contact.name === name)\n      ? alert(`${name} is already in contacts`) : contacts.find((contact) => contact.number === number)\n      ? alert(`${number} is already in contacts`) : setContacts((prevState) => {return[...prevState,contact]});\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) => {return [...prevState].filter( (contact) => contact.id !== contactId );});\n  };\n const  changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts\n      .filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  useEffect(()=>{\n    const localContacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(localContacts);\n    if (parsedContacts) {\n      \n    setContacts(\n       [...parsedContacts]\n      );\n    }\n  },[]) \n\n  useEffect(()=>{\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  },[contacts]);\n  const visibleContacts = filterContacts();\n\n    return (\n      <>\n        <Section title={\"Phonebook\"}>\n          <Form onSubmit={addContact} />\n        </Section>\n\n        <Section title={\"Contacts\"}>\n          <div className={styles.container}>\n            <ContactsFilter value={filter} onChange={changeFilter} />\n            <Contacts\n              contacts={visibleContacts}\n              onDelete={deleteContact}\n            />\n          </div>\n        </Section>\n      </>\n    );\n  }\n\n  export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2AwE3\",\"text\":\"Contacts_text__LlhZX\",\"button\":\"Contacts_button__11m0S\"};"],"sourceRoot":""}